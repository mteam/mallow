(function() {

  var mallow;

  if (this.mallow == null) {
    mallow = {
      cache: {},
      modules: {},

      init: function (name) {
        if (mallow.modules[name] == null) {
          throw new Error("Module '" + name + "' does not exist");
        }

        var define = mallow.modules[name];
        var module = { exports: {}, name: name };
        var require = function (name) {
          return mallow.get(mallow.expand(mallow.dirname(module.name), name));
        };

        mallow.cache[name] = module;
        define(require, module, module.exports);
      },

      get: function (name) {
        if (mallow.cache[name] == null) {
          mallow.init(name);
        }

        return mallow.cache[name].exports;
      },

      expand: function (root, name) {
        var results = [], parts, part;

        if (/^\.\.?(\/|$)/.test(name)) {
          parts = [root, name].join('/').split('/');
        } else {
          parts = name.split('/');
        }

        for (var i = 0, length = parts.length; i < length; i++) {
          part = parts[i];
          if (part === '..') {
            results.pop();
          } else if (part !== '.' && part !== '') {
            results.push(part);
          }
        }

        return results.join('/');
      },

      dirname: function (path) {
        return path.split('/').slice(0, -1).join('/');
      }
    };

    this.mallow = mallow;
  } else {
    mallow = this.mallow;
  }

  if (this.require == null) {
    this.require = mallow.get;
  }



  <%
    var module;
    for (name in modules) {
      module = modules[name];
  %>

  mallow.modules[<%- JSON.stringify(name) %>] = function (require, module, exports) {

<%- module %>

  };

  <% } %>

}).call(this);
